<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<!-- MyBatis 配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="readWriteDataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="mapperLocations">
			<array>
				<value>classpath:mapper/*.xml</value>
			</array>
		</property>
		<property name="typeAliasesPackage" value="com.d2c.*.model" />
	</bean>

	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.d2c.*.dao" />
		<property name="markerInterface" value="com.d2c.mapper.D2cMapper" />
		<property name="properties">
			<value>
				mappers=tk.mybatis.mapper.common.Mapper
			</value>
		</property>
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
		scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- DataSource读写分离 -->
	<bean id="readWriteDataSourceTransactionProcessor" class="com.d2c.datasource.ReadWriteDataSourceProcessor">
		<property name="forceChoiceReadWhenWrite" value="false" />
	</bean>

	<aop:config expose-proxy="true">
		<!-- 只对业务逻辑层实施事务 -->
		<aop:pointcut id="txPointcut" expression="execution(* com.d2c..service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
		<!-- 通过AOP切面实现读/写库选择 -->
		<aop:aspect order="-2147483648" ref="readWriteDataSourceTransactionProcessor">
			<aop:around pointcut-ref="txPointcut" method="determineReadOrWriteDB" />
		</aop:aspect>
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" 
				propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception" timeout="20" />
			<tx:method name="add*"
				propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception" timeout="20" />
			<tx:method name="create*" 
				propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception" timeout="20" />
			<tx:method name="insert*" 
				propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception" timeout="20" />
			<tx:method name="update*" 
				propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception" timeout="20" />
			<tx:method name="merge*" 
				propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception" timeout="20" />
			<tx:method name="del*" 
				propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception" timeout="20" />
			<tx:method name="remove*" 
				propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception" timeout="20" />
			<tx:method name="do*"
				propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception" timeout="20" />
			<tx:method name="query*" 
				propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" 
				propagation="SUPPORTS" read-only="true" />
			<tx:method name="count*" 
				propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" 
				propagation="SUPPORTS" read-only="true" />
			<tx:method name="list*" 
				propagation="SUPPORTS" read-only="true" />
			<tx:method name="*" 
				propagation="REQUIRED" rollback-for="Exception" timeout="20" />
		</tx:attributes>
	</tx:advice>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="readWriteDataSource" />
	</bean>

	<!-- druid 数据源 -->
	<bean id="parentDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<!-- <property name="defaultAutoCommit" value="false" /> -->
		<!-- Connection Pooling Info -->
		<property name="filters" value="stat" />
		<property name="maxActive" value="90" />
		<property name="initialSize" value="5" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="1" />
		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
	</bean>

	<bean id="readWriteDataSource" class="com.d2c.datasource.ReadWriteDataSource">
		<property name="writeDataSource" ref="masterDataSource" />
		<property name="readDataSourceMap">
			<map>
				<entry key="slave1DataSource" value-ref="slave1DataSource" />
				<entry key="slave2DataSource" value-ref="slave2DataSource" />
			</map>
		</property>
	</bean>

	<bean id="masterDataSource" parent="parentDataSource"
		destroy-method="close">
		<property name="url" value="${log.master.jdbc.url}" />
		<property name="username" value="${log.master.jdbc.username}" />
		<property name="password" value="${log.master.jdbc.password}" />
	</bean>

	<bean id="slave1DataSource" parent="parentDataSource"
		destroy-method="close">
		<property name="url" value="${log.slave1.jdbc.url}" />
		<property name="username" value="${log.slave1.jdbc.username}" />
		<property name="password" value="${log.slave1.jdbc.password}" />
		<property name="defaultReadOnly" value="true" />
	</bean>
	
	<bean id="slave2DataSource" parent="parentDataSource"
		destroy-method="close">
		<property name="url" value="${log.slave2.jdbc.url}" />
		<property name="username" value="${log.slave2.jdbc.username}" />
		<property name="password" value="${log.slave2.jdbc.password}" />
		<property name="defaultReadOnly" value="true" />
	</bean>

</beans>