<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.d2c.order.dao.ExchangeMapper">
	<resultMap id="baseMap" type="com.d2c.order.model.Exchange">
		<result property="exchangeSn" column="exchange_sn" />
		<result property="exchangeStatus" column="exchange_status" />
		<result property="exchangeReason" column="exchange_reason" />
		<result property="deliveryCorp" column="delivery_corp" />
		<result property="deliverySn" column="delivery_sn" />
		<result property="memo" column="memo" />
		<result property="adminMemo" column="admin_memo" />
		<result property="oldSkuId" column="old_sku_id" />
		<result property="oldSkuSn" column="old_sku_sn" />
		<result property="oldProductId" column="old_product_id" />
		<result property="oldProductName" column="old_product_name" />
		<result property="oldProductSn" column="old_product_sn" />
		<result property="productTradeType" column="product_trade_type" />
		<result property="productSource" column="product_source" />
		<result property="oldSp1" column="old_sp1" />
		<result property="oldSp2" column="old_sp2" />
		<result property="oldSp3" column="old_sp3" />
		<result property="productImg" column="product_img" />
		<result property="quantity" column="quantity" />
		<result property="memberId" column="member_id" />
		<result property="memberName" column="member_name" />
		<result property="loginCode" column="login_code" />
		<result property="orderId" column="order_id" />
		<result property="orderSn" column="order_sn" />
		<result property="orderItemId" column="order_item_id" />
		<result property="closer" column="closer" />
		<result property="closeDate" column="close_date" />
		<result property="auditor" column="auditor" />
		<result property="auditDate" column="audit_date" />
		<result property="receiver" column="receiver" />
		<result property="receiveDate" column="receive_date" />
		<result property="refuseReceiver" column="refuse_receiver" />
		<result property="refuseReceiveDate" column="refuse_receive_date" />
		<result property="id" column="id" />
		<result property="createDate" column="create_date" />
		<result property="modifyDate" column="modify_date" />
		<result property="skuId" column="sku_id" />
		<result property="productId" column="product_id" />
		<result property="productSn" column="product_sn" />
		<result property="externalSn" column="external_sn" />
		<result property="skuSn" column="sku_sn" />
		<result property="skuName" column="sku_name" />
		<result property="sp1" column="sp1" />
		<result property="sp2" column="sp2" />
		<result property="sp3" column="sp3" />
		<result property="exchangePrice" column="exchange_price" />
		<result property="exchangeDeliveryCorp" column="exchange_delivery_corp" />
		<result property="exchangeDeliverySn" column="exchange_delivery_sn" />
		<result property="price" column="price" />
		<result property="lastModifyMan" column="last_modify_man" />
		<result property="creator" column="creator" />
		<result property="backAddress" column="back_address" />
		<result property="backMobile" column="back_mobile" />
		<result property="backConsignee" column="back_consignee" />
		<result property="device" column="device" />
		<result property="appVersion" column="app_version" />
		<result property="code" column="code" />
		<result property="sender" column="sender" />
		<result property="mobile" column="mobile" />
		<result property="refundId" column="refund_id" />
		<result property="orderPayType" column="order_pay_type" />
		<result property="designerId" column="designer_id" />
		<result property="designerCode" column="designer_code" />
		<result property="designerName" column="designer_name" />
		<result property="exchangeDeliveryDate" column="exchange_delivery_date" />
		<result property="saleCategory" column="sale_category" />
	</resultMap>

	<select id="findByIdAndMemberInfoId" resultMap="baseMap">
		SELECT * FROM
		o_order_exchange WHERE id =#{id} AND member_id=#{memberInfoId}
		LIMIT 0,1
	</select>
	
	<select id="findBySn" resultMap="baseMap">
		SELECT * FROM o_order_exchange WHERE
		exchange_sn=#{exchangeSn}
		LIMIT 0,1
	</select>
	
	<select id="findByDeliverySn" resultMap="baseMap">
		SELECT * FROM o_order_exchange
		WHERE delivery_sn=#{nu}
		UNION
		SELECT * FROM
		o_order_exchange WHERE
		exchange_delivery_sn=#{nu}
	</select>
	
	<select id="findBySearch" resultMap="baseMap">
		SELECT * FROM o_order_exchange WHERE 1=1
		<if test="searcher != null">
			<include refid="Searcher" />
		</if>
		ORDER BY create_date DESC
		LIMIT #{pager.startNumber},#{pager.pageSize}
	</select>

	<select id="countBySearch" resultType="int">
		SELECT count(*) FROM o_order_exchange WHERE 1=1
		<if test="searcher != null">
			<include refid="Searcher" />
		</if>
	</select>
	
	<sql id="Searcher">
		<if test="searcher.exchangeStatus!= null and searcher.exchangeStatus.length &gt; 0">
			AND exchange_status IN
			<foreach collection="searcher.exchangeStatus" item="exchangeStatus"
				index="index" open="(" close=")" separator=",">
				<if test="exchangeStatus!= null">
					#{exchangeStatus.code}
				</if>
			</foreach>
		</if>
		<if test="searcher.productName!=null and searcher.productName!=''">
			AND old_product_name =#{searcher.productName}
		</if>
		<if test="searcher.productSn!=null and searcher.productSn!=''">
			AND old_product_sn =#{searcher.productSn}
		</if>
		<if test="searcher.externalSn!=null and searcher.externalSn!=''">
			AND external_sn =#{searcher.externalSn}
		</if>
		<if test="searcher.skuSn!=null and searcher.skuSn!=''">
			AND old_sku_sn =#{searcher.skuSn}
		</if>
		<if test="searcher.deliverySn!= null and searcher.deliverySn.length &gt; 0">
			AND delivery_sn IN
			<foreach collection="searcher.deliverySn" item="deliverySn"
				index="index" open="(" close=")" separator=",">
				<if test="deliverySn!= null and deliverySn!=''">
					#{deliverySn}
				</if>
			</foreach>
		</if>
		<if test="searcher.exchangeDeliverySn!= null and searcher.exchangeDeliverySn.length &gt; 0">
			AND exchange_delivery_sn IN
			<foreach collection="searcher.exchangeDeliverySn" item="exchangeDeliverySn"
				index="index" open="(" close=")" separator=",">
				<if test="exchangeDeliverySn!= null and exchangeDeliverySn!=''">
					#{exchangeDeliverySn}
				</if>
			</foreach>
		</if>
		<if test="searcher.exchangeSn!=null and searcher.exchangeSn!=''">
			AND exchange_sn =#{searcher.exchangeSn}
		</if>
		<if test="searcher.exchangeReason!=null and searcher.exchangeReason!=''">
			AND exchange_reason=#{searcher.exchangeReason}
		</if>
		<if test="searcher.orderSn!=null and searcher.orderSn!=''">
			AND order_sn =#{searcher.orderSn}
		</if>
		<if test="searcher.loginCode!=null and searcher.loginCode!=''">
			AND login_code =#{searcher.loginCode}
		</if>
		<if test="searcher.orderItemId!=null and searcher.orderItemId!=0">
			AND orderitem_id=#{searcher.orderItemId}
		</if>
		<if test="searcher.beginCreateDate != null">
			AND create_date &gt;= #{searcher.beginCreateDate}
		</if>
		<if test="searcher.endCreateDate != null">
			AND create_date &lt;= #{searcher.endCreateDate}
		</if>
		<if test="searcher.beginAuditDate != null">
			AND audit_date &gt;= #{searcher.beginAuditDate}
		</if>
		<if test="searcher.endAuditDate != null">
			AND audit_date &lt;= #{searcher.endAuditDate}
		</if>
		<if test="searcher.beginReceiveDate != null">
			AND receive_date &gt;= #{searcher.beginReceiveDate}
		</if>
		<if test="searcher.endReceiveDate != null">
			AND receive_date &lt;= #{searcher.endReceiveDate}
		</if>
		<if test="searcher.id != null">
			AND id = #{searcher.id}
		</if>
		<if test="searcher.memberId != null">
			AND member_id = #{searcher.memberId}
		</if>
		<if test="searcher.deliveryType!=null">
			AND EXISTS(
			SELECT 1 FROM orderItem oi WHERE
			o_order_exchange.orderitem_id=oi.id AND
			oi.delivery_type=#{searcher.deliveryType}
			)
		</if>
		<if test="searcher.sender != null and searcher.sender!=''">
			AND sender =#{searcher.sender}
		</if>
		<if test="searcher.mobile != null and searcher.mobile!=''">
			AND mobile = #{searcher.mobile}
		</if>
		<if test="searcher.device!=null and searcher.device!=''">
			AND device=#{searcher.device}
		</if>
		<if test="searcher.designerId!=null">
			AND designer_id=#{searcher.designerId}
		</if>
		<if test="searcher.productTradeType!=null and searcher.productTradeType!=''">
			AND product_trade_type =#{searcher.productTradeType}
		</if>
		<if test="searcher.productSource!=null and searcher.productSource!=''">
			AND product_source =#{searcher.productSource}
		</if>
		<if test="searcher.crmGroupId!=null and searcher.crmGroupId.length >0">
			AND EXISTS(
			SELECT 1 FROM  orders o WHERE
			o_order_exchange.order_id=o.id AND
			o.crm_group_id IN 
			<foreach collection="searcher.crmGroupId" item="crmGroupId" index="index"
				open="(" close=")" separator=",">
				#{crmGroupId}
			</foreach>
			)
		</if>
	</sql>
	
	<select id="findDeliveredByDate" resultMap="baseMap">
		SELECT * FROM
		o_order_exchange WHERE
		exchange_status=4 AND
		exchange_delivery_date&lt;=DATE_SUB(#{date},INTERVAL #{interval}
		DAY)
		LIMIT #{page.startNumber},#{page.pageSize}
	</select>
	
	<select id="countDeliveredByDate" resultType="int">
		SELECT count(*) FROM
		o_order_exchange WHERE
		exchange_status=4 AND
		exchange_delivery_date&lt;=DATE_SUB(#{date},INTERVAL #{interval}
		DAY)
	</select>
	
	<select id="countByStatusAndMemberId" resultType="hashMap">
		SELECT
		exchange_status,COUNT(*) counts FROM o_order_exchange WHERE
		member_id=#{memberInfoId} GROUP BY exchange_status
		ORDER BY exchange_status ASC
	</select>	
	
	<update id="doLogistic">
		UPDATE o_order_exchange SET
		exchange_status=2,delivery_corp=#{deliveryCorp},
		delivery_sn=#{deliverySn},modify_date=now()
		WHERE id = #{id} AND
		exchange_status=1
	</update>
	
	<update id="doReceive">
		UPDATE o_order_exchange SET exchange_status=8,
		modify_date=now()
		WHERE id =
		#{id} AND exchange_status=4
	</update>
	
	<update id="doCancel">
		UPDATE o_order_exchange SET exchange_status=-2,
		closer=#{closer}, close_date=#{closeDate}, modify_date=now()
		WHERE id =
		#{id} AND exchange_status!=8
	</update>
	
	<update id="doCustomAgree">
		UPDATE o_order_exchange SET exchange_status=1,
		auditor=#{auditor}, audit_date=#{auditDate}, admin_memo=#{adminMemo},
		exchange_price=#{exchangePrice}, modify_date=now()
		WHERE id = #{id} AND
		exchange_status=0
	</update>

	<update id="doCustomRefuse">
		UPDATE o_order_exchange SET exchange_status=-3,closer
		=#{closer},close_date
		=#{closeDate},admin_memo=#{adminMemo},modify_date=now()
		WHERE id =
		#{id} AND exchange_status IN(0,1,2)
	</update>

	<update id="doCustomClose">
		UPDATE o_order_exchange SET exchange_status=-1,closer
		=#{closer},close_date
		=#{closeDate},admin_memo=#{adminMemo},modify_date=now()
		WHERE id =
		#{id} AND exchange_status IN(0,1,2,3)
	</update>

	<update id="doCustomerDeliver">
		UPDATE o_order_exchange SET exchange_status
		=4,exchange_delivery_corp=#{exchangeDeliveryCorp},
		exchange_delivery_sn=#{exchangeDeliverySn},
		modify_date=now(),exchange_delivery_date=now()
		WHERE id
		= #{id} AND
		exchange_status=3
	</update>

	<update id="doStoreAgree">
		UPDATE o_order_exchange SET exchange_status
		=3,receiver=#{receiver},receive_date=#{receiveDate},modify_date=now()
		WHERE id = #{id} and exchange_status=2
	</update>

	<update id="doStoreRefuse">
		UPDATE o_order_exchange SET
		exchange_status=-3,refuse_receiver=#{refuseReceiver},refuse_receive_date=#{refuseReceiveDate},modify_date=now()
		WHERE id = #{id} AND exchange_status=2
	</update>

	<update id="updateRefundId">
		UPDATE o_order_exchange
		SET
		modify_date=now(),refund_id=#{refundId}
		WHERE id =#{exchangeId} and
		refund_id is null
	</update>
	
	<update id="updateToChangeSku">
		UPDATE o_order_exchange SET
		sku_id=#{sku.id},product_id=#{sku.productId},product_sn=#{sku.inernalSn},sku_sn=#{sku.barCode},sku_name=#{sku.name},
		sp1=#{sku.sp1},sp2=#{sku.sp2},sp3=#{sku.sp3},modify_date=now()
		WHERE id
		= #{exchangeId}
	</update>

	<update id="updateBackAddress">
		UPDATE o_order_exchange SET
		back_address=#{backAddress},back_mobile=#{backMobile},back_consignee=#{backConsignee}
		WHERE id=#{id}
	</update>

</mapper>