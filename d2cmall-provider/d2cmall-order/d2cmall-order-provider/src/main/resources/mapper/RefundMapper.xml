<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.d2c.order.dao.RefundMapper">
	<resultMap id="baseMap" type="com.d2c.order.model.Refund">
		<result property="id" column="id" />
		<result property="productId" column="product_id" />
		<result property="memberId" column="member_id" />
		<result property="orderId" column="order_id" />
		<result property="orderItemId" column="order_item_id" />
		<result property="orderSn" column="order_sn" />
		<result property="orderPaymentId" column="order_payment_id" />
		<result property="orderPayType" column="order_pay_type" />
		<result property="refundStatus" column="refund_status" />
		<result property="payType" column="pay_type" />
		<result property="backAccountType" column="back_account_type" />
		<result property="refundSn" column="refund_sn" />
		<result property="account" column="account" />
		<result property="memberName" column="member_name" />
		<result property="loginCode" column="login_code" />
		<result property="orderPaySn" column="order_pay_sn" />
		<result property="allRefund" column="all_refund" />
		<result property="productSkuId" column="product_sku_id" />
		<result property="productSkuName" column="product_sku_name" />
		<result property="productSkuSn" column="product_sku_sn" />
		<result property="productTradeType" column="product_trade_type" />
		<result property="productSource" column="product_source" />
		<result property="sp1" column="sp1" />
		<result property="sp2" column="sp2" />
		<result property="sp3" column="sp3" />
		<result property="productImg" column="product_img" />
		<result property="productName" column="product_name" />
		<result property="productSn" column="product_sn" />
		<result property="quantity" column="quantity" />
		<result property="price" column="price" />
		<result property="tradeAmount" column="trade_amount" />
		<result property="backAccountSn" column="back_account_sn" />
		<result property="backAccountName" column="back_account_name" />
		<result property="applyAmount" column="apply_amount" />
		<result property="totalAmount" column="total_amount" />
		<result property="refundReason" column="refund_reason" />
		<result property="memo" column="memo" />
		<result property="customerMemo" column="customer_memo" />
		<result property="evidences" column="evidences" />
		<result property="paySn" column="pay_sn" />
		<result property="payMoney" column="pay_money" />
		<result property="payDate" column="pay_date" />
		<result property="closer" column="closer" />
		<result property="closeDate" column="close_date" />
		<result property="auditor" column="auditor" />
		<result property="auditDate" column="audit_date" />
		<result property="payer" column="payer" />
		<result property="createPayDate" column="create_pay_date" />
		<result property="reshipId" column="reship_id" />
		<result property="exchangeId" column="exchange_id" />
		<result property="proxy" column="proxy" />
		<result property="locked" column="locked" />
		<result property="createDate" column="create_date" />
		<result property="modifyDate" column="modify_date" />
		<result property="lastModifyMan" column="last_modify_man" />
		<result property="creator" column="creator" />
		<result property="device" column="device" />
		<result property="appVersion" column="app_version" />
		<result property="designerId" column="designer_id" />
		<result property="designerCode" column="designer_code" />
		<result property="designerName" column="designer_name" />
		<result property="errorCode" column="error_code" />
		<result property="autoRefund" column="auto_refund" />
		<result property="orderCreateDate" column="order_create_date" />
		<result property="compensationAmount" column="compensation_amount" />
		<result property="refuseDate" column="refuse_date" />
		<result property="orderMemo" column="order_memo" />
		<result property="cashAmount" column="cash_amount" />
		<result property="giftAmount" column="gift_amount" />
		<result property="saleCategory" column="sale_category" />
	</resultMap>

	<select id="findByRefundSn" resultMap="baseMap">
		SELECT *
		FROM o_order_refund
		WHERE
		refund_sn = #{refundSn} limit 0,1
	</select>

	<select id="findByIdAndMemberInfoId" resultMap="baseMap">
		SELECT * FROM
		o_order_refund WHERE id =
		#{refundId} and member_id = #{memberInfoId}
	</select>
	
	<select id="findBySearch" resultMap="baseMap">
		SELECT r.* FROM o_order_refund r where 1=1
		<if test="searcher != null">
			<include refid="Searcher" />
		</if>
		ORDER BY r.create_date DESC LIMIT
		#{pager.startNumber},#{pager.pageSize}
	</select>

	<select id="countBySearch" resultType="int">
		SELECT count(*) FROM o_order_refund r where 1=1
		<if test="searcher != null">
			<include refid="Searcher" />
		</if>
	</select>

	<sql id="Searcher">
		<if test="searcher.lock!=null">
			AND r.locked=#{searcher.lock}
		</if>
		<if test="searcher.memberId!=null">
			AND r.member_id=#{searcher.memberId}
		</if>
		<if test="searcher.productName!=null and searcher.productName!=''">
			AND r.product_name =#{searcher.productName}
		</if>
		<if test="searcher.productSn!=null and searcher.productSn!=''">
			AND r.product_sn =#{searcher.productSn}
		</if>
		<if test="searcher.skuSn!=null and searcher.skuSn!=''">
			AND r.product_sku_sn =#{searcher.skuSn}
		</if>
		<if test="searcher.refundSn!=null and searcher.refundSn!=''">
			AND r.refund_sn =#{searcher.refundSn}
		</if>
		<if test="searcher.refundReason!=null and searcher.refundReason!=''">
			AND r.refund_reason=#{searcher.refundReason}
		</if>
		<if test="searcher.orderItemId!=null and searcher.orderItemId &gt; 0">
			AND r.order_item_id=#{searcher.orderItemId}
		</if>
		<if test="searcher.refundStatus!= null and searcher.refundStatus.length &gt; 0">
			AND r.refund_status IN
			<foreach collection="searcher.refundStatus" item="refundStatus"
				index="index" open="(" close=")" separator=",">
				<if test="refundStatus!= null">
					#{refundStatus.code}
				</if>
			</foreach>
		</if>
		<if test="searcher.orderSn!=null and searcher.orderSn!=''">
			AND r.order_sn =#{searcher.orderSn}
		</if>
		<if test="searcher.loginCode!=null and searcher.loginCode!=''">
			AND r.login_code =#{searcher.loginCode}
		</if>
		<if test="searcher.operation != null and searcher.operation != ''">
			AND EXISTS(SELECT 1 FROM p_brand WHERE
			id=r.designer_id
			and operation = #{searcher.operation})
		</if>
		<if test="searcher.agreeFlag!=null and searcher.agreeFlag">
			AND r.reship_id is null
		</if>
		<if test="searcher.beginCreateDate != null">
			AND r.create_date &gt;= #{searcher.beginCreateDate}
		</if>
		<if test="searcher.endCreateDate != null">
			AND r.create_date &lt;= #{searcher.endCreateDate}
		</if>
		<if test="searcher.beginAuditDate != null">
			AND r.audit_date &gt;= #{searcher.beginAuditDate}
		</if>
		<if test="searcher.endAuditDate != null">
			AND r.audit_date &lt;= #{searcher.endAuditDate }
		</if>
		<if test="searcher.reship==1">
			AND r.reship_id is null
		</if>
		<if test="searcher.reship==2">
			AND r.reship_id is not null
		</if>
		<if test="searcher.orderPaymentType!= null and searcher.orderPaymentType.length &gt; 0">
			AND r.order_pay_type IN
			<foreach collection="searcher.orderPaymentType" item="orderPaymentType"
				index="index" open="(" close=")" separator=",">
				<if test="orderPaymentType!= null">
					#{orderPaymentType.code}
				</if>
			</foreach>
		</if>
		<if test="searcher.paymentType!= null and searcher.paymentType.length &gt; 0">
			AND r.pay_type IN
			<foreach collection="searcher.paymentType" item="paymentType"
				index="index" open="(" close=")" separator=",">
				<if test="paymentType!= null">
					#{paymentType.code}
				</if>
			</foreach>
		</if>
		<if test="searcher.beginCreatePayDate != null">
			AND r.create_pay_date &gt;= #{searcher.beginCreatePayDate}
		</if>
		<if test="searcher.endCreatePayDate != null">
			AND r.create_pay_date &lt;= #{searcher.endCreatePayDate}
		</if>
		<if test="searcher.loginCode!=null and searcher.loginCode!=''">
			AND r.login_code =#{searcher.loginCode}
		</if>
		<if test="searcher.creator!=null and searcher.creator!=''">
			AND r.creator =#{searcher.creator}
		</if>
		<if test="searcher.auditor!=null and searcher.auditor!=''">
			AND r.auditor =#{searcher.auditor}
		</if>
		<if test="searcher.payer!=null and searcher.payer!=''">
			AND r.payer =#{searcher.payer}
		</if>
		<if test="searcher.minTotalAmount!=null and searcher.minTotalAmount!=''">
			AND r.total_amount &gt;= #{searcher.minTotalAmount}
		</if>
		<if test="searcher.maxTotalAmount!=null and searcher.maxTotalAmount!=''">
			AND r.total_amount &lt;= #{searcher.maxTotalAmount}
		</if>
		<if test="searcher.orderBeginDate!=null">
			AND EXISTS(
			SELECT 1 FROM orderItem oi WHERE
			r.order_item_id=oi.id AND
			oi.create_date &gt;=
			#{searcher.orderBeginDate}
			)
		</if>
		<if test="searcher.orderEndDate!=null">
			AND EXISTS(
			SELECT 1 FROM orderItem oi WHERE
			r.order_item_id=oi.id AND
			oi.create_date &lt;=
			#{searcher.orderEndDate}
			)
		</if>
		<if test="searcher.paySn!=null and searcher.paySn!=''">
			AND r.pay_sn =#{searcher.paySn}
		</if>
		<if test="searcher.deliveryType!=null">
			AND EXISTS(
			SELECT 1 FROM orderItem oi WHERE
			r.orderItemId=oi.id AND
			oi.delivery_type=#{searcher.deliveryType}
			)
		</if>
		<if test="searcher.device!=null and searcher.device!=''">
			AND r.device=#{searcher.device}
		</if>
		<if test="searcher.designerId!=null">
			AND r.designer_id=#{searcher.designerId}
		</if>
		<if test="searcher.orderCreateDate != null">
			AND r.order_create_date &gt;= #{searcher.orderCreateDate}
		</if>
		<if test="searcher.beginPayDate!=null">
			AND r.pay_date &gt;= #{searcher.beginPayDate}
		</if>
		<if test="searcher.endPayDate!=null">
			AND r.pay_date &lt; #{searcher.endPayDate}
		</if>
		<if test="searcher.orderMemo!=null">
			AND r.order_memo =#{searcher.orderMemo}
		</if>
		<if test="searcher.crmGroupId!=null and searcher.crmGroupId.length >0">
			AND EXISTS(
			SELECT 1 FROM  orders o WHERE
			r.order_id=o.id AND
			o.crm_group_id IN 
			<foreach collection="searcher.crmGroupId" item="crmGroupId" index="index"
				open="(" close=")" separator=",">
				#{crmGroupId}
			</foreach>
			)
		</if>
		<if test="searcher.productTradeType!=null and searcher.productTradeType!=''">
			AND r.product_trade_type =#{searcher.productTradeType}
		</if>
		<if test="searcher.productSource!=null and searcher.productSource!=''">
			AND r.product_source =#{searcher.productSource}
		</if>
	</sql>

	<select id="countByStatusAndMemberId" resultType="hashMap">
		SELECT refund_status
		,COUNT(*) counts FROM o_order_refund WHERE
		member_id=#{memberInfoId} GROUP BY refund_status ORDER BY
		refund_status ASC
	</select>
	
	<select id="countGroupByStatus" resultType="hashMap">
		SELECT refund_status
		,COUNT(*) counts FROM o_order_refund GROUP BY refund_status ORDER BY
		refund_status ASC
	</select>
	
	<update id="updateReshipId">
		UPDATE o_order_refund
		SET modify_date=now(),reship_id
		=#{reshipId}
		WHERE id =#{refundId} and reship_id is null
	</update>
	
	<update id="updateBackAccount">
		UPDATE o_order_refund SET
		modify_date=now()
		<if test="backAccountName != null and backAccountName != '' ">
			,back_account_name=#{backAccountName}
		</if>
		<if test="backAccountSn != null and backAccountSn != '' ">
			,back_account_sn=#{backAccountSn}
		</if>
		WHERE id=#{refundId} and
		refund_status &lt;4 and
		refund_status &gt;=0
	</update>
	
	<update id="updateAmount">
		UPDATE o_order_refund SET total_amount=#{totalAmount} WHERE
		id= #{id} and
		refund_status &lt;=1
	</update>
	
	<update id="updateWalletAmount">
		update o_order_refund set
		cash_amount=#{cashAmount},gift_amount=#{giftAmount}
		where id=#{id}
	</update>
	
	<update id="updateErrorCode">
		UPDATE o_order_refund set error_code=#{errorCode}
		WHERE
		refund_sn= #{refundSn}
	</update>
	
	<update id="doCustomerAgree">
		UPDATE o_order_refund
		SET modify_date=now(),refund_status =4,
		auditor =#{auditor},audit_date =now(),total_amount=#{totalAmount},customer_memo=#{customerMemo}
		WHERE id=#{refundId} and (refund_status=0 OR refund_status=1)
	</update>
	
	<update id="doCloseRefund">
		UPDATE o_order_refund
		SET modify_date=now(),refund_status =-1,
		closer =#{closer},close_date = now()
		WHERE id =#{refundId} and
		refund_status!=8
	</update>

	<update id="doLock">
		UPDATE o_order_refund
		SET modify_date=now(),locked=1,last_modify_man=#{lastModifyMan}
		WHERE id = #{refundId} and
		refund_status!=8 and locked=0
	</update>

	<update id="doCancelLock">
		UPDATE o_order_refund
		SET modify_date=now(),locked=0,last_modify_man=#{lastModifyMan}
		WHERE id = #{refundId} and
		refund_status!=8 and locked=1
	</update>

	<update id="doBack">
		UPDATE o_order_refund
		SET modify_date=now(),locked=0,refund_status=1,last_modify_man=#{lastModifyMan},refuse_date=now()
		WHERE id =
		#{refundId} and refund_status=4
	</update>

	<update id="doCancel">
		UPDATE o_order_refund
		SET modify_date=now(),refund_status =-2,closer =#{memberName},close_date=now() 
		WHERE id= #{refundId} and
		(refund_status=0 OR refund_status=1)
	</update>

	<update id="doSuccessRefund">
		UPDATE o_order_refund
		<set>
			<if test="payer!=null and payer != ''">
				payer = #{payer},
				last_modify_man = #{payer},
			</if>
			<if test="paySn!= null and paySn!='' ">
				pay_sn= #{paySn},
			</if>
			<if test="payMoney!= null">
				pay_money= #{payMoney},
			</if>
			<if test="payDate!= null">
				pay_date = #{payDate},
			</if>
			<if test="backAccountType!= null">
				back_account_type = #{backAccountType},
			</if>
			<if test="allRefund!= null">
				all_refund = #{allRefund},
			</if>
			create_pay_date = now(),
			refund_status =8,
			modify_date=now()
		</set>
		WHERE id = #{refundId} and refund_status =4 and locked=0
	</update>

	<update id="doThirdRefund">
		UPDATE o_order_refund
		<set>
			<if test="payer!=null and payer != ''">
				payer = #{payer},
				last_modify_man = #{payer},
			</if>
			<if test="payMoney!= null">
				pay_money= #{payMoney},
			</if>
			<if test="payDate!= null">
				pay_date = #{payDate},
			</if>
			<if test="backAccountType!= null">
				back_account_type = #{backAccountType},
			</if>
			auto_refund=1,
			refund_status =5,
			modify_date=now()
		</set>
		WHERE id = #{refundId} and refund_status =4 and locked=0
	</update>

	<update id="doThirdSuccess">
		UPDATE o_order_refund
		<set>
			<if test="paySn!= null and paySn!='' ">
				pay_sn= #{paySn},
			</if>
			<if test="notifyTime!= null">
				create_pay_date = #{notifyTime},
			</if>
			refund_status =8,
			modify_date=now()
		</set>
		WHERE id = #{refundId} and refund_status =5 and locked=0
	</update>

	<update id="doCompensation">
		UPDATE o_order_refund SET
		compensation_amount=compensation_amount+#{compansation}
		WHERE id=#{id}
	</update>

</mapper>