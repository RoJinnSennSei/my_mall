<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.d2c.product.dao.ProductMapper">
	<resultMap id="baseMap" type="com.d2c.product.model.Product">
		<result property="id" column="id" />
		<result property="designerId" column="designer_id" />
		<result property="designerName" column="designer_name" />
		<result property="designerCode" column="designer_code" />
		<result property="seriesId" column="series_id" />
		<result property="topCategoryId" column="top_category_id" />
		<result property="productCategoryId" column="product_category_id" />
		<result property="saleCategory" column="sale_category" />
		<result property="productSaleType" column="product_sale_type" />
		<result property="productSellType" column="product_sell_type" />
		<result property="productTradeType" column="product_trade_type" />
		<result property="importType" column="import_type" />
		<result property="source" column="source" />
		<result property="inernalSn" column="inernal_sn" />
		<result property="name" column="name" />
		<result property="subTitle" column="sub_title" />
		<result property="introPic" column="intro_pic" />
		<result property="picStyle" column="pic_style" />
		<result property="remark" column="remark" />
		<result property="seo" column="seo" />
		<result property="externalSn" column="external_sn" />
		<result property="originalName" column="original_name" />
		<result property="topCategory" column="top_category" />
		<result property="productCategory" column="product_category" />
		<result property="salesproperty" column="salesproperty" />
		<result property="sp1GroupId" column="sp1_group_id" />
		<result property="sp2GroupId" column="sp2_group_id" />
		<result property="compositionId" column="composition_id" />
		<result property="tags" column="tags" />
		<result property="subscribe" column="subscribe" />
		<result property="cart" column="cart" />
		<result property="cod" column="cod" />
		<result property="ad" column="ad" />
		<result property="topical" column="topical" />
		<result property="timing" column="timing" />
		<result property="search" column="search" />
		<result property="mark" column="mark" />
		<result property="upMarketDate" column="up_market_date" />
		<result property="downMarketDate" column="down_market_date" />
		<result property="upMan" column="up_man" />
		<result property="downMan" column="down_man" />
		<result property="sort" column="sort" />
		<result property="syncStamp" column="sync_stamp" />
		<result property="status" column="status" />
		<result property="minPrice" column="min_price" />
		<result property="maxPrice" column="max_price" />
		<result property="originalPrice" column="original_price" />
		<result property="aPrice" column="a_price" />
		<result property="createDate" column="create_date" />
		<result property="modifyDate" column="modify_date" />
		<result property="lastModifyMan" column="last_modify_man" />
		<result property="creator" column="creator" />
		<result property="after" column="after" />
		<result property="coupon" column="coupon" />
		<result property="estimateDate" column="estimate_date" />
		<result property="estimateDay" column="estimate_day" />
		<result property="video" column="video" />
		<result property="afterMemo" column="after_memo" />
		<result property="recom" column="recom" />
		<result property="operRecom" column="oper_recom" />
		<result property="firstRatio" column="first_ratio" />
		<result property="secondRatio" column="second_ratio" />
		<result property="grossRatio" column="gross_ratio" />
		<result property="goodPromotionId" column="good_promotion_id" />
		<result property="orderPromotionId" column="order_promotion_id" />
		<result property="flashPromotionId" column="flash_promotion_id" />
		<result property="collagePromotionId" column="collage_promotion_id" />
		<result property="flashPrice" column="flash_price" />
		<result property="costPrice" column="cost_price" />
		<result property="gpSort" column="gp_sort" />
		<result property="opSort" column="op_sort" />
		<result property="fpSort" column="fp_sort" />
		<result property="taxation" column="taxation" />
		<result property="shipping" column="shipping" />
		<result property="kaolaPrice" column="kaola_price" />
		<result property="taxPrice" column="tax_price" />
		<result property="collagePrice" column="collage_price" />
		<result property="syncStore" column="sync_store" />
		<result property="popStore" column="pop_store" />
	</resultMap>

	<resultMap id="storeMap" type="com.d2c.product.model.Product" extends="baseMap">
		<association property="popStore" column="id" select="sumPopStore" />
		<association property="syncStore" column="id" select="sumSyncStore" />
	</resultMap>
	
	<select id="findByIds" resultMap="baseMap">
		SELECT * FROM p_product 
		WHERE 
		<if test="ids!= null and ids.length &gt; 0">
			id IN
			<foreach collection="ids" item="id" index="index"
				open="(" close=")" separator=",">
				<if test="id!=null">
					#{id}
				</if>
			</foreach>
		</if>
		<if test="ids == null or ids.length == 0">
			id = 0
		</if>
		LIMIT 0,300
	</select>
	
	<select id="sumPopStore" resultType="int">
		SELECT
		COALESCE(SUM(p_product_sku.pop_store),0) FROM p_product_sku 
		WHERE product_id=#{id} AND status&gt;=0
	</select>

	<select id="sumSyncStore" resultType="int">
		SELECT
		COALESCE(SUM(p_product_sku.store),0) FROM p_product_sku 
		WHERE product_id=#{id} AND status&gt;=0
	</select>

	<select id="findBySearch" resultMap="storeMap">
		SELECT p.*
		FROM p_product p
		<if test="searcher.tagId != null">
			,p_product_tag_relation ptr
		</if>
		<if test="searcher.relationProductId != null">
			,p_product_relation r
		</if>
		<if test="searcher.operation!= null">
			,p_brand
		</if>
		WHERE 1=1
		<if test="searcher != null">
			<include refid="productSearcher" />
			<include refid="relationSearcher" />
			<include refid="designerSearcher" />
		</if>
		<if test="searcher.orderByStr !=null and searcher.orderByStr !=''">
			ORDER BY ${searcher.orderByStr}
		</if>
		<if test="pager!=null">
			LIMIT #{pager.startNumber}, #{pager.pageSize}
		</if>
	</select>

	<select id="countBySearch" resultType="Integer">
		SELECT COUNT(*) FROM p_product p
		<if test="searcher.tagId != null">
			,p_product_tag_relation ptr
		</if>
		<if test="searcher.relationProductId != null">
			,p_product_relation r
		</if>
		<if test="searcher.operation!= null">
			,p_brand
		</if>
		WHERE 1=1
		<if test="searcher != null">
			<include refid="productSearcher" />
			<include refid="relationSearcher" />
			<include refid="designerSearcher" />
		</if>
	</select>

	<sql id="productSearcher">
		<if test="searcher != null">
			<if test="searcher.keywords != null">
				AND (p.name LIKE CONCAT('%',#{searcher.keywords},'%') OR
				p.inernal_sn LIKE CONCAT('%',#{searcher.keywords},'%'))
			</if>
			<if test="searcher.productId != null">
				AND p.id = #{searcher.productId}
			</if>
			<if test="searcher.designerId != null">
				AND p.designer_id = #{searcher.designerId}
			</if>
			<if test="searcher.seriesId != null">
				AND p.series_id = #{searcher.seriesId}
			</if>
			<if test="searcher.promotionId!= null">
				AND p.good_promotion_id=#{searcher.promotionId}
			</if>
			<if test="searcher.orderPromotionId!= null">
				AND p.order_promotion_id=#{searcher.orderPromotionId}
			</if>
			<if test="searcher.flashPromotionId!=null">
				AND p.flash_promotion_id=#{searcher.flashPromotionId}
			</if>
			<if test="searcher.topId != null and searcher.topId !=0 ">
				AND p.top_category_id = #{searcher.topId}
			</if>
			<if test="searcher.categoryId != null and searcher.categoryId !=0">
				AND p.product_category_id = #{searcher.categoryId}
			</if>
			<if test="searcher.sn!= null and searcher.sn.length &gt; 0">
				AND p.inernal_sn in
				<foreach collection="searcher.sn" item="sn" index="index"
					open="(" close=")" separator=",">
					<if test="sn!=null">
						#{sn}
					</if>
				</foreach>
			</if>
			<if test="searcher.name!= null and searcher.name!=''">
				AND p.name like CONCAT('%',#{searcher.name},'%')
			</if>
			<if test="searcher.maxPrice != null">
				AND p.max_price &lt;= #{searcher.maxPrice}
			</if>
			<if test="searcher.promotionPrice != null">
				AND p.min_price &gt;= #{searcher.promotionPrice}
			</if>
			<if test="searcher.subscribe != null">
				AND p.subscribe = #{searcher.subscribe}
			</if>
			<if test="searcher.topical!=null">
				AND p.topical=#{searcher.topical}
			</if>
			<if test="searcher.ad != null">
				AND p.ad = #{searcher.ad}
			</if>
			<if test="searcher.isAfter!=null and searcher.isAfter">
				AND p.after=1
			</if>
			<if test="searcher.isAfter!=null and !searcher.isAfter">
				AND p.after=0
			</if>
			<if test="searcher.mark != null">
				AND p.mark = #{searcher.mark}
			</if>
			<if test="searcher.status != null">
				AND p.status = #{searcher.status}
			</if>
			<if test="searcher.syncStamp != null">
				AND p.sync_stamp = #{searcher.syncStamp}
			</if>
			<if test="searcher.beginUpDate != null">
				AND p.up_market_date &gt;= #{searcher.beginUpDate}
			</if>
			<if test="searcher.endUpDate!= null">
				AND p.up_market_date &lt;= #{searcher.endUpDate}
			</if>
			<if test="searcher.beginDownDate != null">
				AND p.down_market_date &gt;= #{searcher.beginDownDate}
			</if>
			<if test="searcher.endDownDate != null">
				AND p.down_market_date &lt;= #{searcher.endDownDate}
			</if>
			<if test="searcher.minRecom != null">
				AND p.recom &gt;= #{searcher.minRecom}
			</if>
			<if test="searcher.maxRecom != null">
				AND p.recom &lt;= #{searcher.maxRecom}
			</if>
			<if test="searcher.minFirst != null">
				AND p.first_ratio &gt;= #{searcher.minFirst}
			</if>
			<if test="searcher.maxFirst != null">
				AND p.first_ratio &lt;= #{searcher.maxFirst}
			</if>
			<if test="searcher.minSecond != null">
				AND p.second_ratio &gt;= #{searcher.minSecond}
			</if>
			<if test="searcher.maxSecond != null">
				AND p.second_ratio &lt;= #{searcher.maxSecond}
			</if>
			<if test="searcher.minGross != null">
				AND p.gross_ratio &gt;= #{searcher.minGross}
			</if>
			<if test="searcher.maxGross != null">
				AND p.gross_ratio &lt;= #{searcher.maxGross}
			</if>
			<if test="searcher.designers!=null and searcher.designers.size() > 0">
				AND
				<trim prefix="(" suffix=")" prefixOverrides="or">
					<foreach collection="searcher.designers" item="designerId">
						or
						designer_id = #{designerId}
					</foreach>
				</trim>
			</if>
			<if test="searcher.marks!=null and searcher.marks.length > 0">
				AND
				<trim prefix="(" suffix=")" prefixOverrides="or">
					<foreach collection="searcher.marks" item="mark">
						or p.mark =
						#{mark}
					</foreach>
				</trim>
			</if>
			<if test="searcher.saleCategory != null">
				AND p.sale_category = #{searcher.saleCategory}
			</if>
			<if test="searcher.productSaleType != null">
				AND p.product_sale_type = #{searcher.productSaleType}
			</if>
			<if test="searcher.productSellType!=null and searcher.productSellType!=''">
				AND p.product_sell_type=#{searcher.productSellType}
			</if>
			<if test="searcher.productTradeType!=null and searcher.productTradeType!=''">
				AND p.product_trade_type=#{searcher.productTradeType}
			</if>
			<if test="searcher.source!=null and searcher.source!=''">
				AND p.source=#{searcher.source}
			</if>
			<if test="searcher.inernalSn != null">
				AND p.inernal_sn = #{searcher.inernalSn}
			</if>
			<if test="searcher.externalSn != null and searcher.externalSn!=''">
				AND p.external_sn =#{searcher.externalSn}
			</if>
			<if test="searcher.lastDate!=null">
				AND p.modify_date &gt;= #{searcher.lastDate}
			</if>
			<if test="searcher.designerName != null">
				AND p.designer_name = #{searcher.designerName}
			</if>
			<if test="searcher.expired==1">
				and product_sell_type='PRESELL' and p.estimate_day IS
				NULL AND estimate_date
				&lt;=#{searcher.expiredDate}
			</if>
			<if test="searcher.warnStore==1">
				AND exists(SELECT 1 from p_product_sku sku where
				sku.warn_store is not null AND
				sku.warn_store>=(sku.store+sku.pop_store) AND p.id=sku.product_id)
				AND mark=1
			</if>
			<if test="searcher.hasRebate!=null and  searcher.hasRebate==1">
				AND (p.first_ratio &gt;0 or p.second_ratio &gt;0)
			</if>
			<if test="searcher.hasRebate!=null and searcher.hasRebate==0">
				AND p.first_ratio =0 and p.second_ratio =0
			</if>
			<if test="searcher.skuSn!=null and searcher.skuSn!=''">
				AND exists(SELECT 1 from p_product_sku sku where
				sku.sn=#{searcher.skuSn} AND p.id=sku.product_id)
			</if>
		</if>
	</sql>

	<sql id="relationSearcher">
		<if test="searcher != null">
			<if test="searcher.tagId!= null">
				AND p.id =ptr.product_id AND ptr.tag_id=#{searcher.tagId}
			</if>
			<if test="searcher.relationProductId!= null">
				AND p.id =r.relation_id AND r.type='PRODUCT' AND
				r.source_id=#{searcher.relationProductId}
			</if>
		</if>
	</sql>

	<sql id="designerSearcher">
		<if test="searcher.operation!= null">
			and p_brand.id=p.designer_id and
			p_brand.operation=#{searcher.operation}
		</if>
	</sql>

	<update id="updateIndex">
		UPDATE p_product SET search =
		#{search},modify_date=now()
		WHERE id= #{id}
	</update>

	<update id="updateMark">
		UPDATE p_product SET
		mark=#{status},modify_date=now()
		<if test="status==1">
			,up_market_date=#{markDate}
		</if>
		<if test="status==0">
			,down_market_date=#{markDate}
		</if>
		<if test="adminName!=null and status==1">
			,up_man=#{adminName}
		</if>
		<if test="adminName!=null and status==0">
			,down_man=#{adminName}
		</if>
		WHERE
		id=#{id}
	</update>

	<update id="updateTopical">
		UPDATE p_product SET topical
		=#{topical},modify_date=now() WHERE id = #{id}
	</update>

	<update id="updateAd">
		UPDATE p_product SET ad
		=#{ad},modify_date=now() WHERE
		id= #{id}
	</update>

	<update id="updateCod">
		UPDATE p_product SET cod
		=#{cod},modify_date=now()
		WHERE
		id = #{id}
	</update>

	<update id="updateCart">
		UPDATE p_product SET cart
		=#{cart},modify_date=now()
		WHERE
		id = #{id}
	</update>

	<update id="updateSubscribe">
		UPDATE p_product SET subscribe =
		#{subscribe},modify_date=now() WHERE id
		= #{id}
	</update>

	<update id="updateAfter">
		UPDATE p_product SET after =
		#{after},modify_date=now()
		WHERE id=#{id}
	</update>
	
	<update id="updateCoupon">
		UPDATE p_product SET coupon=#{coupon}, modify_date=now()
		WHERE id=#{id}
	</update>
	
	<update id="updateRemark">
		UPDATE p_product SET remark =
		#{remark},modify_date=now() WHERE id =
		#{id}
	</update>

	<update id="updateTags">
		UPDATE p_product SET tags=#{tags},modify_date=now()
		WHERE id=#{id}
	</update>

	<update id="delete">
		UPDATE p_product SET mark=#{mark},modify_date=now()
		WHERE
		id = #{id}
	</update>

	<update id="updateSyncTimestamp">
		UPDATE p_product p, p_product_sku sku
		SET p.sync_stamp=#{syncStamp}
		WHERE p.id=sku.product_id AND
		sku.store!=sku.sf_stock + sku.st_stock
	</update>
	
	<update id="doSumProductStore">
		UPDATE p_product a,
		(SELECT
		SUM(p_product_sku.pop_store) as pop_store,
		SUM(p_product_sku.store) as store,
		product_id FROM p_product_sku
		WHERE p_product_sku.status &gt;= 0
		GROUP BY product_id) b
		SET a.pop_store=b.pop_store,a.sync_store=b.store
		WHERE a.id=b.product_id
	</update>

	<select id="findSyncProductStore" resultMap="storeMap">
		SELECT * FROM
		p_product WHERE mark in (0,1) AND sync_stamp=#{syncStamp}
		LIMIT
		#{pager.startNumber}, #{pager.pageSize}
	</select>

	<select id="findProductStoreBySku" resultType="hashMap">
		SELECT
		COALESCE(SUM(p_product_sku.pop_store),0) as pop,
		COALESCE(SUM(p_product_sku.store),0) as store
		FROM
		p_product_sku
		WHERE
		p_product_sku.status &gt;= 0 AND
		p_product_sku.product_id=#{productId}
	</select>

	<update id="updateSalesPropertyBySku">
		UPDATE p_product p
		SET p.salesproperty=#{salesProperty}
		WHERE p.id=#{productId}
	</update>

	<select id="getMaxSort" resultType="Integer">
		SELECT COALESCE(max(sort),0)
		FROM p_product p WHERE p.designer_id = #{id}
	</select>

	<update id="updateSort">
		UPDATE p_product SET sort
		=#{sort} WHERE id
		=#{id}
	</update>

	<update id="updatePromotionSort">
		UPDATE p_product
		<set>
			<if test="gpSort!=null">
				gp_sort=#{gpSort},
			</if>
			<if test="opSort!=null">
				op_sort=#{opSort},
			</if>
			<if test="fpSort!=null">
				fp_sort=#{fpSort},
			</if>
			modify_date =now()
		</set>
		WHERE id = #{id}
	</update>

	<select id="countGroupByMark" resultType="HashMap">
		SELECT mark,COUNT(*) as
		counts
		FROM p_product GROUP BY mark
		ORDER BY mark ASC
	</select>

	<select id="findProductBySn" resultMap="baseMap">
		SELECT * FROM p_product
		WHERE
		inernal_sn = #{sn} AND mark &gt; 0
	</select>

	<select id="findOneBySn" resultMap="baseMap">
		SELECT * FROM p_product WHERE
		inernal_sn = #{sn} ORDER BY id desc limit 0,1
	</select>

	<update id="updateUpMarketDate">
		UPDATE p_product SET
		modify_date=now(),
		up_market_date
		=
		#{upMarketDate}
		WHERE id = #{id}
	</update>

	<update id="updateDownMarketDate">
		UPDATE p_product SET
		modify_date=now(),
		down_market_date
		=
		#{downMarketDate}
		WHERE id = #{id}
	</update>

	<update id="updateCategory">
		UPDATE p_product SET
		modify_date=now(),
		product_category_id=#{pcId},
		top_category_id=#{tcId},
		product_category=#{pcJson},
		top_category=#{tcJson}
		WHERE id= #{id}
	</update>

	<update id="doTiming">
		UPDATE p_product
		SET timing =
		#{timing},modify_date=now()
		WHERE id = #{id}
	</update>

	<select id="findStockBySearch" resultMap="baseMap">
		SELECT * FROM p_product p
		WHERE 1=1 AND mark &gt;=0
		<if test="searcher != null">
			<include refid="stockSearcher" />
		</if>
		ORDER BY up_market_date DESC
		<if test="pager!=null">
			LIMIT #{pager.startNumber}, #{pager.pageSize}
		</if>
	</select>

	<select id="countStockBySearch" resultType="int">
		SELECT COUNT(*) FROM p_product p
		WHERE 1=1 AND mark &gt;=0
		<if test="searcher != null">
			<include refid="stockSearcher" />
		</if>
	</select>

	<sql id="stockSearcher">
		<if test="searcher.designerId != null">
			AND p.designer_id = #{searcher.designerId}
		</if>
		<if test="searcher.productName != null and searcher.productName != ''">
			AND p.name like CONCAT('%',#{searcher.productName},'%')
		</if>
		<if test="searcher.inernalSn != null and searcher.inernalSn != ''">
			AND p.inernal_sn = #{searcher.inernalSn}
		</if>
		<if test="searcher.externalSn != null and searcher.externalSn != ''">
			AND p.external_sn= #{searcher.externalSn}
		</if>
		<if test="searcher.designerIds!= null and searcher.designerIds.size &gt; 0">
			AND p.designer_id IN
			<foreach collection="searcher.designerIds" item="designerId"
				index="index" open="(" close=")" separator=",">
				<if test="designerId!= null">
					#{designerId}
				</if>
			</foreach>
		</if>
		<if test="searcher.year != null and searcher.year != ''">
			AND EXISTS(
			SELECT 1 FROM p_brand_series s WHERE
			p.series_id = s.id AND s.season =#{searcher.year}
			)
		</if>
		<if test="searcher.season != null and searcher.season != ''">
			AND EXISTS(
			SELECT 1 FROM p_brand_series s WHERE
			p.series_id = s.id AND s.season =#{searcher.season}
			)
		</if>
		<if test="searcher.designerName != null and searcher.designerName != ''">
			AND EXISTS (
			SELECT 1 FROM p_brand d WHERE
			p.designer_id = d.id AND d.name =#{searcher.designerName}
			)
		</if>
		<if test="searcher.designers != null and searcher.designers != ''">
			AND EXISTS (
			SELECT 1 FROM p_brand d WHERE
			p.designer_id = d.id AND d.designers =#{searcher.designers}
			)
		</if>
		<if test="searcher.stocked == 1">
			AND EXISTS (
			SELECT 1 FROM p_product_sku sku WHERE
			p.id = sku.product_id AND (sku.sf_stock &gt; 0 OR sku.st_stock &gt; 0)
			AND sku.status &gt;=0
			)
		</if>
		<if test="searcher.stocked == 0">
			AND NOT EXISTS (
			SELECT 1 FROM p_product_sku sku WHERE
			p.id = sku.product_id AND (sku.sf_stock &gt; 0 OR sku.st_stock &gt; 0)
			AND sku.status &gt;=0
			)
		</if>
		<if test="searcher.barCode != null and searcher.barCode !=''">
			AND EXISTS (
			SELECT 1 FROM p_product_sku sku WHERE
			p.id = sku.product_id AND sku.bar_code = #{searcher.barCode}
			)
		</if>
	</sql>

	<select id="findByCouponDefId" resultMap="baseMap">
		SELECT p.* FROM
		p_product
		p,o_coupon_def_relation c
		WHERE p.id=c.target_id AND
		c.coupon_def_id=#{defineId} AND c.type='PRODUCT'
		ORDER BY
		p.up_market_date DESC,p.create_date DESC
		LIMIT
		#{pager.startNumber},
		#{pager.pageSize}
	</select>

	<select id="countByCouponDefId" resultType="int">
		SELECT count(p.id)
		FROM
		p_product p,o_coupon_def_relation c
		WHERE p.id=c.target_id AND
		c.coupon_def_id=#{defineId} AND c.type='PRODUCT'
	</select>

	<select id="findByProductTagId" resultMap="baseMap">
		SELECT p.* from
		p_product p,
		p_product_tag_relation r where p.id=r.product_id and
		tag_id=#{tagId} and p.mark &gt;= 0
		order by r.sort desc,r.id desc
		LIMIT
		#{pager.startNumber},
		#{pager.pageSize}
	</select>

	<select id="countByProductTagId" resultType="int">
		SELECT count(p.id)
		FROM p_product p, p_product_tag_relation r where p.id=r.product_id
		and
		tag_id=#{tagId} and p.mark &gt;= 0
	</select>

	<select id="findByPromotionId" resultMap="baseMap">
		SELECT p.* from
		p_product
		p,
		promotion_relation r where p.id=r.product_id and
		promotion_id=#{promotionId} and p.mark &gt;= 0
		order by r.sort
		desc,r.id desc
		LIMIT
		#{pager.startNumber},
		#{pager.pageSize}
	</select>

	<select id="countByPromotionId" resultType="int">
		SELECT count(p.id)
		FROM p_product p, promotion_relation r where p.id=r.product_id
		and
		promotion_id=#{promotionId} and p.mark &gt;= 0
	</select>

	<select id="findByDesignerId" resultMap="baseMap">
		SELECT * FROM p_product
		p
		WHERE designer_id=#{designerId}
		AND p.mark=1 AND p.cart=1
		ORDER BY
		sort
		DESC
		LIMIT #{pager.startNumber}, #{pager.pageSize}
	</select>

	<select id="countByDesignerId" resultType="int">
		SELECT count(id) FROM
		p_product p
		WHERE designer_id=#{designerId}
		AND p.mark=1 AND p.cart=1
	</select>

	<select id="findBySourceId" resultMap="baseMap">
		SELECT p.* from p_product p, p_product_relation r where
		p.id=r.relation_id
		and
		type=#{type} and source_id=#{sourceId}
		<if test="mark != null">
			and p.mark=#{mark}
		</if>
		order by r.sort desc,r.id desc
		LIMIT #{pager.startNumber},
		#{pager.pageSize}
	</select>

	<select id="countBySourceId" resultType="int">
		SELECT count(p.id) FROM p_product p, p_product_relation r where
		p.id=r.relation_id
		and type= #{type} and source_id=#{sourceId}
		<if test="mark != null">
			and p.mark=#{mark}
		</if>
	</select>

	<select id="findByMemberShareId" resultMap="baseMap">
		SELECT p.* FROM
		p_product p,m_share m WHERE
		p.id=m.product_id AND m.id=#{shareId}
	</select>

	<select id="findRecommendedProducts" resultMap="baseMap">
		SELECT * FROM p_product p,
		(SELECT product_id,SUM(product_quantity) AS
		sales
		FROM orderitem
		WHERE create_date &gt; #{startDate} AND status NOT
		IN('MALLCLOSE','CLOSE')
		<if test="designerId!=null">
			AND designer_id=#{designerId}
		</if>
		GROUP BY product_id
		ORDER BY sales DESC
		LIMIT 0,10)t
		WHERE
		t.product_id=p.id AND p.mark=1
		ORDER BY t.sales DESC,p.up_market_date
		DESC
		LIMIT 0,#{number}
	</select>

	<select id="findNoStore" resultMap="baseMap">
		SELECT *
		FROM p_product
		WHERE
		pop_store + sync_store &gt;= 0
		AND mark = 1
		LIMIT #{pager.startNumber},
		#{pager.pageSize}
	</select>

	<select id="countNoStore" resultType="Integer">
		SELECT COUNT(*)
		FROM
		p_product
		WHERE pop_store + sync_store &lt;=0
		AND mark=1
	</select>

	<select id="findByDesignerIdAndBarCode" resultType="Long">
		SELECT
		p.id FROM
		p_product p LEFT JOIN p_product_sku ps ON ps.product_id
		=p.id
		WHERE
		<if test="designerIds==null or designerIds.size()==0">
			p.designer_id=#{designerId}
		</if>
		<if test="designerIds!=null and designerIds.size()>0">
			p.designer_id IN
			<foreach collection="designerIds" index="index" item="designerId"
				open="(" separator="," close=")">
				#{designerId}
			</foreach>
		</if>
		<if test="barCode!=null and barCode!=''">
			AND ps.bar_code=#{barCode}
		</if>
		AND ps.status &gt;=0
	</select>


	<update id="updatePrice" parameterType="com.d2c.product.model.Product">
		UPDATE p_product
		<set>
			<if test="aPrice != null">a_price = #{aPrice},</if>
			<if test="minPrice != null">min_price = #{minPrice},</if>
			<if test="maxPrice != null">max_price = #{maxPrice},</if>
			<if test="originalPrice != null">original_price = #{originalPrice},</if>
			<if test="flashPrice != null">flash_price = #{flashPrice},</if>
			<if test="collagePrice != null">collage_price = #{collagePrice},</if>
			modify_date=now()
		</set>
		WHERE id = #{id}
	</update>

	<update id="updateAfterByDesigner">
		update p_product set after=#{after} WHERE
		designer_id=#{designerId}
	</update>

	<update id="updateCodByDesigner">
		update p_product set cod=#{cod} WHERE
		designer_id=#{designerId}
	</update>

	<select id="findProductId" resultType="java.lang.Long">
		select id from p_product
		WHERE
		designer_id=#{designerId}
	</select>

	<select id="findByProductSn" resultMap="baseMap">
		select * from p_product
		WHERE
		external_sn=#{productSn} or inernal_sn=#{productSn} limit 0,1
	</select>

	<select id="findDeepByCategoryId" resultMap="baseMap">
		select p.* from p_product p
		inner join p_product_category c on c.id =
		p.product_category_id and c.status = 1
		WHERE p.mark = 1
		<if test="productCategoryId != null">
			and c.parent_id = #{productCategoryId}
		</if>
		<if test="lastDate != null">
			and p.modify_date &gt; #{lastDate}
		</if>
		order by p.recom desc
		<if test="pager != null">
			limit #{pager.startNumber}, #{pager.pageSize}
		</if>
	</select>

	<update id="updateEstimateDate">
		update p_product set
		estimate_date=#{estimateDate},last_modify_man=#{operator},modify_date=now()
		where id=#{id} and product_sell_type='PRESELL'
	</update>

	<update id="updateVideoById">
		UPDATE p_product SET video=#{video},
		modify_date=NOW()
		WHERE
		id=#{id}
	</update>

	<update id="updateRecomById">
		update p_product set recom=#{recom}
		<if test="operRecom != null">
			, oper_recom=#{operRecom}, modify_date=NOW() 
		</if>
		WHERE id=#{id}
	</update>

	<update id="updateRebate">
		update p_product set
		first_ratio=#{firstRatio},
		second_ratio=#{secondRatio},
		gross_ratio=#{grossRatio},
		modify_date=NOW()
		WHERE id=#{id}
	</update>

	<update id="updateGoodPromotion">
		update p_product set
		good_promotion_id=#{goodPromotionId}, modify_date=NOW()
		WHERE id=#{id}
	</update>

	<update id="updateOrderPromotion">
		update p_product set
		order_promotion_id=#{orderPromotionId}, modify_date=NOW()
		WHERE
		id=#{id}
	</update>

	<update id="updateAPrice">
		UPDATE p_product SET
		a_price=#{aPrice},modify_date=NOW() WHERE id=#{id}
	</update>

	<update id="updateFlashPromotionId">
		update p_product set
		flash_promotion_id=#{flashPromotionId} where id=#{id}
	</update>

	<update id="updateCollagePromotionId">
		update p_product set
		collage_promotion_id=#{collagePromotionId} where id=#{id}
	</update>
	
	<update id="updateAfterMemo">
		update p_product set after_memo=#{afterMemo}
		,modify_date=NOW() WHERE id=#{id}
	</update>

	<update id="updateSellType">
		update p_product
		set product_sell_type=#{sellType}, modify_date=now()
		<if test="sellType!=null and sellType=='PRESELL'">
			,estimate_date=#{estimateDate}
			,estimate_day=#{estimateDay}
		</if>
		<if test="sellType!=null and sellType=='CUSTOM'">
			,estimate_day=#{estimateDay}
		</if>
		<if test="remark!=null and remark!=''">
			,remark=#{remark}
		</if>
		where id=#{id}
	</update>

	<update id="upEstimate">
		 update p_product 
		 set estimate_date=#{estimateDate}, estimate_day=#{estimateDay}, modify_date=now()  
		 where id=#{id}
	</update>
	
	<select id="findByBrandAndSeries" resultType="long">
		select id from p_product where
		designer_id=#{brandId}
		<if test="seriesId!=null">
			and series_id=#{seriesId}
		</if>
		limit #{pager.startNumber}, #{pager.pageSize}
	</select>

	<select id="countByBrandAndSeries" resultType="int">
		select count(id) from p_product where
		designer_id=#{brandId}
		<if test="seriesId!=null">
			and series_id=#{seriesId}
		</if>
	</select>

	<update id="updateKaolaProduct">
		UPDATE p_product SET modify_date=NOW()
		<if test="kaolaPrice!=null">
			, kaola_price=#{kaolaPrice}
		</if>
		<if test="taxation!=null">
			,taxation=#{taxation}
		</if>
		<if test="shipping!=null">
			,shipping=#{shipping}
		</if>
		WHERE id=#{id}
	</update>
	
	<select id="countKaolaByWaitingForRepair" resultType="int">
		SELECT COUNT(id) FROM p_product WHERE source='KAOLA' AND intro_pic LIKE CONCAT('%','http','%')
	</select>
	
	<select id="findKaolaByWaitingForRepair" resultMap="baseMap">
		SELECT * FROM p_product WHERE source='KAOLA' AND intro_pic LIKE CONCAT('%','http','%')
		LIMIT #{pager.startNumber},#{pager.pageSize}
	</select>

	
</mapper>