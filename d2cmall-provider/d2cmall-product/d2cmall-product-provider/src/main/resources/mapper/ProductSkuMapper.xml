<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.d2c.product.dao.ProductSkuMapper">
	<resultMap id="baseMap" type="com.d2c.product.model.ProductSku">
		<result property="id" column="id" />
		<result property="inernalSn" column="inernal_sn" />
		<result property="sn" column="sn" />
		<result property="name" column="name" />
		<result property="sp1" column="sp1" />
		<result property="sp2" column="sp2" />
		<result property="sp3" column="sp3" />
		<result property="originalCost" column="original_cost" />
		<result property="price" column="price" />
		<result property="aPrice" column="a_price" />
		<result property="status" column="status" />
		<result property="upMarketDate" column="up_market_date" />
		<result property="downMarketDate" column="down_market_date" />
		<result property="upMan" column="up_man" />
		<result property="downMan" column="down_man" />
		<result property="store" column="store" />
		<result property="popStore" column="pop_store" />
		<result property="freezeStore" column="freeze_store" />
		<result property="flashStore" column="flash_store" />
		<result property="flashSellStore" column="flash_sell_store" />
		<result property="sale" column="sale" />
		<result property="sequence" column="sequence" />
		<result property="createDate" column="create_date" />
		<result property="modifyDate" column="modify_date" />
		<result property="lastModifyMan" column="last_modify_man" />
		<result property="creator" column="creator" />
		<result property="productId" column="product_id" />
		<result property="barCode" column="bar_code" />
		<result property="sfStock" column="sf_stock" />
		<result property="stStock" column="st_stock" />
		<result property="externalSn" column="external_sn" />
		<result property="warnStore" column="warn_store" />
		<result property="flashPrice" column="flash_price" />
		<result property="costPrice" column="cost_price" />
		<result property="kaolaPrice" column="kaola_price" />
		<result property="collagePrice" column="collage_price" />
	</resultMap>

	<resultMap id="storeMap" type="com.d2c.product.dto.ProductSkuDto" extends="baseMap">
		<result property="storeStock" column="storeStock" />
		<result property="occupyStock" column="occupyStock" />
	</resultMap>

	<select id="findByIds" resultMap="baseMap">
		SELECT * FROM p_product_sku 
		WHERE 
		<if test="ids!= null and ids.length &gt; 0">
			id IN
			<foreach collection="ids" item="id" index="index"
				open="(" close=")" separator=",">
				<if test="id!=null">
					#{id}
				</if>
			</foreach>
		</if>
		<if test="ids == null or ids.length == 0">
			id = 0
		</if>
		LIMIT 0,300
	</select>
		
	<select id="findBySearch" resultMap="baseMap">
		SELECT * FROM p_product_sku WHERE status &gt;=0
		<if test="searcher != null">
			<include refid="Searcher" />
		</if>
		ORDER BY sequence,id DESC
		<if test="pager!=null">
			LIMIT #{pager.startNumber}, #{pager.pageSize}
		</if>
	</select>

	<select id="countBySearch" resultType="Integer">
		SELECT COUNT(*) FROM p_product_sku WHERE status &gt;=0
		<if test="searcher != null">
			<include refid="Searcher" />
		</if>
	</select>

	<sql id="Searcher">
		<if test="searcher != null">
			<if test="searcher.productId != null">
				AND product_id = #{searcher.productId}
			</if>
			<if test="searcher.productName != null and searcher.productName!=''">
				AND name LIKE CONCAT('%',#{searcher.productName},'%')
			</if>
			<if test="searcher.productSn != null and searcher.productSn!=''">
				AND inernal_sn =#{searcher.productSn}
			</if>
			<if test="searcher.keywords != null and searcher.keywords!=''">
				AND (
				inernal_sn LIKE CONCAT('%',#{searcher.keywords},'%')
				OR name LIKE CONCAT('%',#{searcher.keywords},'%')
				OR sn LIKE
				CONCAT('%',#{searcher.keywords},'%')
				)
			</if>
		</if>
	</sql>

	<select id="findByBarCode" resultMap="baseMap">
		SELECT * FROM
		p_product_sku
		WHERE bar_code = #{barCode} and status &gt;=0 LIMIT 0,1
	</select>

	<update id="initPopStore">
		UPDATE p_product_sku, p_product SET
		p_product_sku.pop_store=0, p_product_sku.modify_date=now()
		WHERE
		p_product_sku.product_id=p_product.id
		<if test="designerId != null">
			AND p_product.designer_id=#{designerId}
		</if>
	</update>

	<update id="updatePopStore">
		UPDATE p_product_sku SET pop_store =#{popStore}, modify_date=now()
		WHERE bar_code = #{barCode}
	</update>

	<update id="updateFlashStore">
		UPDATE p_product_sku SET flash_sell_store=0, flash_store=#{quantity}
		<if test="collagePrice != null">
			,collage_price=#{collagePrice}
		</if>
		<if test="flashPrice != null">
			,flash_price=#{flashPrice}
		</if>
		WHERE id = #{skuId}
	</update>
	
	<update id="doSyncSkuStore">
		UPDATE p_product_sku a, product_sku_stock_summary b
		SET a.sf_stock=b.sf_stock, a.st_stock=b.st_stock,
		a.modify_date=now()
		WHERE a.id=b.sku_id
	</update>

	<update id="doSumSkuStore">
		UPDATE p_product_sku SET store=sf_stock+st_stock,
		modify_date=now() WHERE store!=sf_stock+st_stock
	</update>

	<select id="findByProductId" resultMap="baseMap">
		SELECT * FROM
		p_product_sku
		WHERE product_id= #{productId} and status &gt;=0
	</select>

	<select id="countByProductId" resultType="Integer">
		SELECT count(*) FROM
		p_product_sku
		WHERE product_id= #{productId} and status &gt;=0
	</select>

	<select id="findStockByStore" resultType="hashMap">
		SELECT s.name as name, pss.stock as stock, s.tel as tel
		FROM
		product_sku_stock
		pss,o_store s
		WHERE pss.bar_code = #{barCode} AND
		pss.store_code = s.code
		<if test="primary==1">
			and s.code='0000'
		</if>
		<if test="primary!=1">
			and s.code!='0000'
		</if>
		ORDER BY pss.stock DESC
	</select>

	<update id="updateStatusByProduct">
		UPDATE p_product_sku SET
		status=#{status},modify_date=now()
		<if test="status==1">
			,up_market_date=now()
		</if>
		<if test="status==0">
			,down_market_date=now()
		</if>
		<if test="adminName!=null and status==1">
			,up_man=#{adminName}
		</if>
		<if test="adminName!=null and status==0">
			,down_man=#{adminName}
		</if>
		WHERE product_id=#{productId} AND status&gt;=0
	</update>

	<update id="delete">
		UPDATE p_product_sku SET
		status=-1,sn=CONCAT(sn,'-',NOW()),modify_date=now()
		WHERE id = #{id}
		AND status &gt;=0
	</update>

	<update id="freezeStock">
		UPDATE p_product_sku
		SET freeze_store = freeze_store+#{quantity}
		WHERE id = #{skuId}
		AND (store+pop_store-freeze_store) &gt;= #{quantity}
	</update>

	<update id="cancelFreezeAndDeduceStock">
		UPDATE p_product_sku
		SET freeze_store = freeze_store-#{quantity}
		<if test="pop == 0">
			,store = store-#{quantity}
		</if>
		<if test="pop == 1">
			,pop_store = pop_store-#{quantity}
		</if>
		WHERE id = #{skuId} 
		<if test="pop == 0">
			AND (store-#{quantity}) &gt;= 0
		</if>
	</update>

	<update id="cancelFreezeAndDeduceFlashStock">
		UPDATE p_product_sku
		SET freeze_store = freeze_store-#{quantity},
		flash_sell_store = flash_sell_store+#{quantity}
		<if test="pop == 0">
			,store = store-#{quantity}
		</if>
		<if test="pop == 1">
			,pop_store = pop_store-#{quantity}
		</if>
		WHERE id = #{skuId} AND (flash_sell_store+#{quantity}) &lt;= flash_store
		<if test="pop == 0">
			AND (store-#{quantity}) &gt;= 0
		</if>
	</update>
		
	<update id="updateProductSkuSales">
		UPDATE p_product_sku SET sale = sale +
		#{productQuantity}
		WHERE id =#{productSkuId}
	</update>

	<sql id="skuSearcher">
		<if test="inernalSn != null">
			AND ps.inernal_sn = #{inernalSn}
		</if>
		<if test="lastSysDate != null">
			AND ps.modify_date &gt; #{lastSysDate}
		</if>
		<if test="designerId!=null">
			AND ps.product_id in (select id from p_product where
			designer_id=#{designerId})
		</if>
	</sql>

	<update id="doRepairFreezeStock">
		UPDATE `p_product_sku` SET `freeze_store`=0 WHERE
		`freeze_store` != 0 AND `id` NOT IN
		(SELECT `product_sku_id` FROM
		`orderitem` WHERE `status` ='INIT')
	</update>

	<update id="updateExternalSnBySkuSn">
		UPDATE `p_product_sku` SET external_sn=#{externalSn}
		WHERE bar_code=#{barCode}
	</update>

	<select id="findListByBarCode" resultMap="baseMap">
		SELECT * FROM
		p_product_sku
		WHERE bar_code = #{barCode} and status &gt;=0
	</select>

	<update id="updateAPrice">
		UPDATE p_product_sku SET
		a_price=#{aPrice},modify_date=now() WHERE id=#{skuId}
	</update>

	<select id="findByProductSource" resultType="com.d2c.product.third.kaola.KaolaProduct">
		SELECT 
		p.id AS productId,
		p.inernal_sn AS productSn,
		sku.bar_code AS barCode,
		p.kaola_price AS kaolaPrice,
		p.taxation,
		p.shipping,
		sku.pop_store AS popStore,
		p.mark
		FROM p_product_sku sku, p_product p 
		WHERE sku.product_id=p.id AND p.source=#{source} 
		LIMIT #{pager.startNumber}, #{pager.pageSize}
	</select>
	
	<select id="countByProductSource" resultType="int">
		SELECT COUNT(p.id)
		FROM p_product_sku sku, p_product p 
		WHERE sku.product_id=p.id AND p.source=#{source}
	</select>
	
	<update id="updateKaolaByBarCode">
		UPDATE p_product_sku SET pop_store =
		#{popStore},kaola_price=#{kaolaPrice}modify_date=now() WHERE
		bar_code = #{barCode}
	</update>
	
	<select id="countKaolaByWaitingForRepair" resultType="int">
		SELECT COUNT(id) FROM p_product_sku  WHERE sp1 LIKE CONCAT('%','http','%')
	</select>
	
	<select id="findKaolaByWaitingForRepair" resultMap="baseMap">
		SELECT * FROM p_product_sku  WHERE sp1 LIKE CONCAT('%','http','%') LIMIT #{pager.startNumber},#{pager.pageSize}
	</select>
	
	<select id="findByBrandIdAndExternalSn" resultMap="baseMap">
		SELECT * FROM p_product_sku WHERE external_sn=#{externalSn} AND 
		exists(SELECT 1 from p_product p where
				p.designer_id=#{brandId} AND p.id=p_product_sku.product_id)
	</select>
	
	<select id="findByStore" resultMap="storeMap">
		SELECT p.*,s.stock AS storeStock,s.occupy_stock AS occupyStock
		FROM p_product_sku p, product_sku_stock s
		WHERE s.store_code=#{storeCode}
		AND p.bar_code = s.bar_code
		<if test="searcher != null">
			<include refid="stockSearcher" />
		</if>
		LIMIT #{pager.startNumber}, #{pager.pageSize}
 	</select>

	<select id="countByStore" resultType="int">
		SELECT COUNT(p.id) AS storeStock FROM p_product_sku p, product_sku_stock s
		WHERE s.store_code=#{storeCode}
		AND p.bar_code = s.bar_code
		<if test="searcher != null">
			<include refid="stockSearcher" />
		</if>
	</select>
		
	<sql id="stockSearcher">
		<if test="searcher.barCode != null and searcher.barCode != ''">
			AND p.bar_code = #{searcher.barCode}
		</if>
		<if test="searcher.productName != null and searcher.productName != ''">
			AND p.name like CONCAT('%',#{searcher.productName},'%')
		</if>
		<if test="searcher.productId != null">
			AND p.product_id = #{searcher.productId}
		</if>
		<if test="searcher.inernalSn != null and searcher.inernalSn != ''">
			AND p.inernal_sn = #{searcher.inernalSn}
		</if>
		<if test="searcher.externalSn != null and searcher.externalSn != ''">
			AND p.external_sn= #{searcher.externalSn}
		</if>
	</sql>
			
</mapper>