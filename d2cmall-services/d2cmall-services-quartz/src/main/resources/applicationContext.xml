<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/task 
	http://www.springframework.org/schema/task/spring-task.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="1" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:conf/app.properties</value>
				<value>file:///${user.home}/conf/*.properties</value>
			</list>
		</property>
	</bean>
    
    <context:component-scan base-package="com.d2c"/>
    
    <import resource="classpath:spring-dubbo-provider-rest.xml"/>
    
	<import resource="classpath:dubbo-bean.xml" />
    
	<import resource="classpath:spring-redis-member.xml" />
	<import resource="classpath:spring-activemq.xml" />
	
	
	<task:annotation-driven executor="executor" scheduler="scheduler" />
	<task:executor id="executor" pool-size="40" />
	<task:scheduler id="scheduler" pool-size="100" />

	<bean id="indexExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10" />
		<property name="maxPoolSize" value="50" />
		<property name="queueCapacity" value="2000" />
	</bean>

	<bean id="props" class="com.d2c.quartz.task.properties.QuartzProperties">
		<property name="msg" value="${quartz.msg}" />
	</bean>
    
</beans>


